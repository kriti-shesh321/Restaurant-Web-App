name: Migrate & Deploy Backend (server)

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  migrate_and_deploy:
    name: Run DB migrations & deploy to Railway
    runs-on: ubuntu-latest
    environment: "Restaurant-Web-App (bountiful-celebration / production)"

    env:
      RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}           
      RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }} 
      RAILWAY_SERVICE: "Restaurant-Web-App"                 
      DATABASE_URL: ${{ secrets.DB_URL }}
      NODE_ENV: production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Railway CLI
        run: npm i -g @railway/cli

      - name: Debug - show railway and node versions
        run: |
          node -v
          npm -v
          railway --version || true

      - name: Verify Railway account token (whoami)
        env:
          RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
        run: |
          echo ">>> Checking if RAILWAY_API_TOKEN is present..."
          if [ -z "$RAILWAY_API_TOKEN" ]; then
            echo "ERROR: RAILWAY_API_TOKEN is empty. Add it to repo secrets or the Environment."
            exit 2
          fi
          echo ">>> Running railway whoami..."
          RAILWAY_API_TOKEN="$RAILWAY_API_TOKEN" railway whoami || (echo "whoami failed - check RAILWAY_API_TOKEN (invalid or lacks permissions)" && exit 1)

      - name: Link repo to Railway project (non-interactive)
        env:
          RAILWAY_API_TOKEN: ${{ secrets.RAILWAY_API_TOKEN }}
        run: |
          echo ">>> Linking repo to project id: $RAILWAY_PROJECT_ID"
          # link the current directory to the project so subsequent railway commands run against it
          RAILWAY_API_TOKEN=$RAILWAY_API_TOKEN railway link $RAILWAY_PROJECT_ID

      - name: Run Sequelize migrations on Railway (remote)
        working-directory: ./server
        run: |
          echo ">>> Running migrations using railway run (service: $RAILWAY_SERVICE)"
          # RAILWAY_TOKEN (project token) is read from job env automatically by CLI v4
          railway run --service "$RAILWAY_SERVICE" -- \
            npx sequelize-cli db:migrate --config config/config.cjs --migrations-path migrations

      - name: Deploy backend (server) to Railway
        working-directory: ./server
        run: |
          echo ">>> Deploying service $RAILWAY_SERVICE to Railway"
          # RAILWAY_TOKEN is available in job env
          railway up --service "$RAILWAY_SERVICE" --yes --no-watch
